#!/usr/bin/env node
"use strict";
// vim: set ft=javascript:

var fs        = require('fs');
var classMap  = require('./classmap');
var optimist  = require('optimist')
      .usage('Usage: xcss-classmap [options] entry')
      .option('h', {
        alias: 'help',
        boolean: true,
        describe: 'Show this message and exit'
      })
      .option('v', {
        alias: 'version',
        boolean: true,
        describe: 'Print xcss version and exit'
      })
      .option('c', {
        alias: 'compress',
        boolean: true,
        describe: 'Compress output'
      });

function error(msg, showHelp) {
  if (showHelp)
    optimist.showHelp();
  console.warn('error: ', msg);
  if (msg.stack)
    console.warn(msg.stack);
  process.exit(1);
}
var argv = optimist.argv;

if (argv.help)
  return optimist.showHelp();

if (argv.version)
  return console.log(require('./package.json').version);

if (argv._.length === 0)
  error('provide bundle entry module as an argument', true);

var result = {};
argv._.forEach(function(f) {
  var map = classMap.find(fs.readFileSync(f, 'utf8')).map;
  for (var k in map)
    result[k] = true;
});

if (argv.compress)
  result = classMap.compress(result);

console.log(JSON.stringify(result));
